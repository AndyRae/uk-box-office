version: "3.9"

services:
  web:
      image: "${WEB_IMAGE}"
      # build:
      #  context: ./src/
      env_file:
        - ./.env
      command: gunicorn --preload --bind 0.0.0.0:5000 "ukbo:create_app('production')"
      volumes:
        - "./data:/app/data/"
      expose:
        - 5000
      depends_on:
        - db
        - elastic
      networks:
        - deploy-network
  nginx:
    image: "${NGINX_IMAGE}"
    # build: ./nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    networks:
      - deploy-network
    # volumes:
    #   - ./nginx/conf:/etc/nginx/conf.d/:ro
  #     - ./certbot/www:/var/www/certbot/:ro
  # certbot:
  #   image: certbot/cerbot:latest
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  db:
    image: postgres
    restart: always
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - deploy-network
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - deploy-network


volumes:
  elastic_data:
  postgres_data:


networks:
  deploy-network:
    driver: bridge
